/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package umu.tds.myvideoapp.vista;

import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import umu.tds.myvideoapp.controlador.ControladorMyVideoApp;
import umu.tds.myvideoapp.dominio.ITest;
import umu.tds.myvideoapp.dominio.ListaVideos;
import umu.tds.myvideoapp.dominio.Video;

import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.DocumentException;
import javax.swing.JButton;
import javax.swing.JLabel;
import java.awt.Color;
import java.awt.Component;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileNotFoundException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.Timer;
import javax.swing.ImageIcon;
import javax.swing.border.EtchedBorder;

/**
 *
 * @author Agustin
 */
public class AppFrame extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Creates new form AppFrame
	 */
	public AppFrame() {
		initComponents();
		setLocationRelativeTo(null);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		framePanel = new javax.swing.JPanel();
		topPanel = new javax.swing.JPanel();
		leftPanel = new javax.swing.JPanel();
		mostSeenLabel = new javax.swing.JLabel();
		recentLabel = new javax.swing.JLabel();
		newListLabel = new javax.swing.JLabel();
		myListsLabel = new javax.swing.JLabel();
		jSeparator1 = new javax.swing.JSeparator();
		jSeparator2 = new javax.swing.JSeparator();
		jSeparator3 = new javax.swing.JSeparator();
		jSeparator4 = new javax.swing.JSeparator();
		myListsPanel = new javax.swing.JPanel();
		myListsScrollPanel = new javax.swing.JScrollPane();
		rightPanel = new javax.swing.JPanel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("MyVideoApp");
		setMaximumSize(new java.awt.Dimension(4320, 2160));
		setMinimumSize(new java.awt.Dimension(900, 600));
		setName("appFrame"); // NOI18N

		framePanel.setBackground(new java.awt.Color(36, 36, 36));
		framePanel.setMinimumSize(new java.awt.Dimension(900, 600));
		framePanel.setPreferredSize(new java.awt.Dimension(900, 600));

		topPanel.setBackground(new java.awt.Color(42, 42, 42));
		topPanel.setMinimumSize(new java.awt.Dimension(512, 120));
		topPanel.setPreferredSize(new java.awt.Dimension(900, 120));

		leftPanel.setBackground(new java.awt.Color(45, 45, 45));

		mostSeenLabel.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
		mostSeenLabel.setForeground(new java.awt.Color(0, 153, 204));
		mostSeenLabel.setText("Más vistos");

		recentLabel.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
		recentLabel.setForeground(new java.awt.Color(0, 153, 204));
		recentLabel.setText("Recientes");

		newListLabel.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
		newListLabel.setForeground(new java.awt.Color(0, 153, 204));
		newListLabel.setText("Nueva Lista");

		myListsLabel.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
		myListsLabel.setForeground(new java.awt.Color(0, 153, 204));
		myListsLabel.setText("Mis listas");

		myListsPanel.setBackground(new java.awt.Color(45, 45, 45));
		myListsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204), 2));

		myListsScrollPanel.setBackground(new java.awt.Color(45, 45, 45));
		myListsScrollPanel.setBorder(null);
		myListsScrollPanel.setMinimumSize(new java.awt.Dimension(100, 100));

		javax.swing.GroupLayout myListsPanelLayout = new javax.swing.GroupLayout(myListsPanel);
		myListsPanelLayout.setHorizontalGroup(myListsPanelLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(myListsPanelLayout.createSequentialGroup()
						.addComponent(myListsScrollPanel, GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
						.addContainerGap()));
		myListsPanelLayout.setVerticalGroup(myListsPanelLayout.createParallelGroup(Alignment.LEADING)
				.addComponent(myListsScrollPanel, GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE));
		myListsPanel.setLayout(myListsPanelLayout);

		table_1 = new JTable();
		table_1.setRowSelectionAllowed(false);
		table_1.setBackground(null);
		table_1.setShowGrid(false);
		table_1.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {

			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
					boolean hasFocus, int row, int column) {

				if (value instanceof JButton) {
					JButton button = (JButton) value;
					return button;
				} else if (value instanceof JLabel) {
					JLabel label = (JLabel) value;
					return label;
				}

				return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
			}
		});

		// Crea la tabla de listas
		createTableListas();

		// Boton crear nueva lista
		addButton = new JButton("");
		addButton.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
		addButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String nombreLista = JOptionPane.showInputDialog(framePanel, "¿Como quieres llamar a la nueva lista?",
						"Nueva Lista", JOptionPane.QUESTION_MESSAGE);
				if (nombreLista != null) {
					if (ControladorMyVideoApp.getUnicaInstancia().registrarListaVideos(nombreLista))
						createTableListas();
					else
						JOptionPane.showMessageDialog(thisFrame, "Ya existe una lista con este nombre", "Error",
								JOptionPane.ERROR_MESSAGE);

				}
			}
		});
		addButton.setBorderPainted(false);
		addButton.setBackground(null);
		addButton.setBorderPainted(false);
		addButton.setIcon(new ImageIcon(AppFrame.class.getResource("/sources/add.png")));

		historyButton = new JButton("");
		historyButton.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
		historyButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				rightPanel.removeAll();
				ControladorMyVideoApp.getUnicaInstancia().stopVideo();

				rightPanel.add(new JPanelRecientes("Recientes", thisFrame), BorderLayout.CENTER);
				stopTimer();

				revalidate();
				repaint();
			}
		});
		historyButton.setBorderPainted(false);
		historyButton.setBackground(null);
		historyButton.setBorderPainted(false);
		historyButton.setIcon(new ImageIcon(AppFrame.class.getResource("/sources/clock.png")));

		topButton = new JButton("");
		topButton.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
		topButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {

				if (!ControladorMyVideoApp.getUnicaInstancia().isPremium()) {

					JOptionPane.showMessageDialog(thisFrame, "Necesitas ser premium para ver los m�s vistos",
							"M�s Vistos", JOptionPane.INFORMATION_MESSAGE);
					return;
				}

				rightPanel.removeAll();
				ControladorMyVideoApp.getUnicaInstancia().stopVideo();
				stopTimer();

				rightPanel.add(new JPanelMasVistos("M�s Vistos", thisFrame), BorderLayout.CENTER);

				revalidate();
				repaint();
			}
		});
		topButton.setBorderPainted(false);
		topButton.setBackground(null);
		topButton.setBorderPainted(false);
		topButton.setIcon(new ImageIcon(AppFrame.class.getResource("/sources/top.png")));

		button_1 = new JButton("");
		button_1.setBorderPainted(false);
		button_1.setContentAreaFilled(false);
		button_1.setIcon(new ImageIcon(AppFrame.class.getResource("/sources/pdf.png")));
		button_1.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
		button_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				if (!ControladorMyVideoApp.getUnicaInstancia().isPremium()) {

					JOptionPane.showMessageDialog(thisFrame, "Necesitas ser premium para hacer un pdf de tus listas",
							"Mis listas", JOptionPane.INFORMATION_MESSAGE);
					return;
				}

				String nombre = JOptionPane.showInputDialog(thisFrame,
						"¿Como quieres llamar al archivo pdf de tus videos?", "Mis Videos",
						JOptionPane.QUESTION_MESSAGE);
				if (nombre == null || String.valueOf(nombre).replaceAll("\\s+", "").equals(""))
					return;
				try {
					ControladorMyVideoApp.getUnicaInstancia().listasToPDF(nombre);
				} catch (FileNotFoundException | DocumentException e1) {
					JOptionPane.showMessageDialog(thisFrame, "No se ha podido generar el archivo", "Error",
							JOptionPane.ERROR_MESSAGE);
					return;
				}

			}
		});

		javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
		leftPanelLayout.setHorizontalGroup(leftPanelLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(leftPanelLayout.createSequentialGroup().addGroup(leftPanelLayout
						.createParallelGroup(Alignment.LEADING)
						.addGroup(leftPanelLayout.createSequentialGroup().addGap(32).addGroup(leftPanelLayout
								.createParallelGroup(Alignment.LEADING)
								.addGroup(leftPanelLayout.createSequentialGroup().addComponent(mostSeenLabel)
										.addPreferredGap(ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
										.addComponent(topButton).addGap(35))
								.addComponent(jSeparator1, GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
								.addGroup(leftPanelLayout.createSequentialGroup().addComponent(myListsLabel)
										.addPreferredGap(ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
										.addComponent(button_1).addGap(32))
								.addComponent(jSeparator4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addComponent(jSeparator3, GroupLayout.PREFERRED_SIZE, 219, GroupLayout.PREFERRED_SIZE)
								.addGroup(leftPanelLayout.createSequentialGroup().addComponent(newListLabel)
										.addPreferredGap(ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
										.addComponent(addButton, GroupLayout.PREFERRED_SIZE, 28,
												GroupLayout.PREFERRED_SIZE)
										.addGap(39))
								.addGroup(leftPanelLayout.createSequentialGroup().addComponent(recentLabel)
										.addPreferredGap(ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
										.addComponent(historyButton, GroupLayout.PREFERRED_SIZE, 34,
												GroupLayout.PREFERRED_SIZE)
										.addGap(37))
								.addComponent(jSeparator2, GroupLayout.PREFERRED_SIZE, 216, GroupLayout.PREFERRED_SIZE))
								.addGap(16))
						.addGroup(leftPanelLayout.createSequentialGroup().addGap(64).addComponent(myListsPanel,
								GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
						.addGap(32)));
		leftPanelLayout.setVerticalGroup(leftPanelLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(leftPanelLayout.createSequentialGroup().addGap(25)
						.addGroup(leftPanelLayout.createParallelGroup(Alignment.TRAILING).addComponent(mostSeenLabel)
								.addComponent(topButton))
						.addGap(4).addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.RELATED)
						.addGroup(leftPanelLayout.createParallelGroup(Alignment.TRAILING).addComponent(recentLabel)
								.addComponent(historyButton))
						.addGap(4).addComponent(jSeparator2, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
						.addGap(7)
						.addGroup(leftPanelLayout.createParallelGroup(Alignment.TRAILING).addComponent(newListLabel)
								.addComponent(addButton, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE))
						.addGap(4).addComponent(jSeparator3, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.RELATED)
						.addGroup(leftPanelLayout.createParallelGroup(Alignment.TRAILING).addComponent(myListsLabel)
								.addComponent(button_1))
						.addGap(4).addComponent(jSeparator4, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.RELATED)
						.addComponent(myListsPanel, GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE).addGap(32)));
		leftPanel.setLayout(leftPanelLayout);

		javax.swing.GroupLayout framePanelLayout = new javax.swing.GroupLayout(framePanel);
		framePanel.setLayout(framePanelLayout);
		framePanelLayout
				.setHorizontalGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(framePanelLayout.createSequentialGroup()
								.addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(8, 8, 8).addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		framePanelLayout.setVerticalGroup(framePanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, framePanelLayout.createSequentialGroup()
						.addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 96,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(8, 8, 8)
						.addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));
		GridBagLayout gbl_topPanel = new GridBagLayout();
		gbl_topPanel.columnWidths = new int[] { 32, 64, 460, 64, 145, 16, 0, 0 };
		gbl_topPanel.rowHeights = new int[] { 20, 20, 44, 0 };
		gbl_topPanel.columnWeights = new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE };
		gbl_topPanel.rowWeights = new double[] { 0.0, 0.0, 0.0, Double.MIN_VALUE };
		topPanel.setLayout(gbl_topPanel);

		lblNewLabel = new JLabel("");
		lblNewLabel.setIcon(new ImageIcon(AppFrame.class.getResource("/sources/logo64.png")));
		GridBagConstraints gbc_lblNewLabel = new GridBagConstraints();
		gbc_lblNewLabel.gridheight = 3;
		gbc_lblNewLabel.insets = new Insets(0, 0, 5, 5);
		gbc_lblNewLabel.gridx = 1;
		gbc_lblNewLabel.gridy = 0;
		topPanel.add(lblNewLabel, gbc_lblNewLabel);
		userIconLabel = new javax.swing.JLabel();
		userIconLabel.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.DEFAULT_CURSOR));
		userIconLabel
				.setBorder(new EtchedBorder(EtchedBorder.RAISED, new Color(0, 153, 204), new Color(255, 255, 255)));
		userIconLabel.setIcon(new ImageIcon(AppFrame.class.getResource("/sources/userIcon64.png")));
		GridBagConstraints gbc_userIconLabel = new GridBagConstraints();
		gbc_userIconLabel.insets = new Insets(0, 0, 0, 5);
		gbc_userIconLabel.fill = GridBagConstraints.BOTH;
		gbc_userIconLabel.gridheight = 4;
		gbc_userIconLabel.gridx = 5;
		gbc_userIconLabel.gridy = 0;
		topPanel.add(userIconLabel, gbc_userIconLabel);

		btnNewButton = new JButton("");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (ControladorMyVideoApp.getUnicaInstancia().isPremium()) {
					JOptionPane.showMessageDialog(thisFrame, "Ya eres premium", "Usuario Premium",
							JOptionPane.INFORMATION_MESSAGE);
				} else {
					if (JOptionPane.showConfirmDialog(thisFrame, "¿Seguro que querieres hacerte premium?",
							"Usuario Premium", JOptionPane.YES_NO_OPTION) == 0)
						ControladorMyVideoApp.getUnicaInstancia().doPremium();
					JOptionPane.showMessageDialog(thisFrame, "¡Enhorabuena, Ya eres premium!", "Usuario Premium",
							JOptionPane.INFORMATION_MESSAGE);
				}
			}
		});
		btnNewButton.setBorderPainted(false);
		btnNewButton.setBorder(null);
		btnNewButton.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
		btnNewButton.setIcon(new ImageIcon(AppFrame.class.getResource("/sources/premium.png")));
		GridBagConstraints gbc_btnNewButton = new GridBagConstraints();
		gbc_btnNewButton.gridheight = 4;
		gbc_btnNewButton.anchor = GridBagConstraints.EAST;
		gbc_btnNewButton.insets = new Insets(0, 0, 0, 5);
		gbc_btnNewButton.gridx = 3;
		gbc_btnNewButton.gridy = 0;
		topPanel.add(btnNewButton, gbc_btnNewButton);
		usernameLabel = new javax.swing.JLabel();

		usernameLabel.setFont(new java.awt.Font("Candara", 0, 18)); // NOI18N
		usernameLabel.setForeground(new java.awt.Color(0, 153, 204));
		usernameLabel.setText("Hola " + ControladorMyVideoApp.getUnicaInstancia().getUsuarioActualUsername());
		GridBagConstraints gbc_usernameLabel = new GridBagConstraints();
		gbc_usernameLabel.anchor = GridBagConstraints.NORTHWEST;
		gbc_usernameLabel.insets = new Insets(0, 0, 5, 5);
		gbc_usernameLabel.gridx = 4;
		gbc_usernameLabel.gridy = 2;
		topPanel.add(usernameLabel, gbc_usernameLabel);
		deployableUserPanel = new javax.swing.JButton();

		deployableUserPanel.setBorder(null);
		deployableUserPanel.setMaximumSize(new java.awt.Dimension(16, 16));
		deployableUserPanel.setMinimumSize(new java.awt.Dimension(16, 16));
		deployableUserPanel.setPreferredSize(new java.awt.Dimension(16, 16));
		GridBagConstraints gbc_deployableUserPanel = new GridBagConstraints();
		gbc_deployableUserPanel.insets = new Insets(0, 0, 5, 5);
		gbc_deployableUserPanel.anchor = GridBagConstraints.NORTHWEST;
		gbc_deployableUserPanel.gridx = 5;
		gbc_deployableUserPanel.gridy = 2;
		topPanel.add(deployableUserPanel, gbc_deployableUserPanel);
		
		outButton = new JButton("");
		outButton.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
		outButton.setBorderPainted(false);
		outButton.setContentAreaFilled(false);
		outButton.setIcon(new ImageIcon(AppFrame.class.getResource("/sources/out.png")));
		outButton.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				if(JOptionPane.showConfirmDialog(thisFrame, "¿Seguro que quieres salir?", "Log out", JOptionPane.YES_NO_OPTION) == 0) {
					LaunchFrame ventanaLogin = new LaunchFrame();
        			ventanaLogin.setVisible(true);
        			ControladorMyVideoApp.getUnicaInstancia().stopVideo();
        			stopTimer();
        			dispose();
				}
			}
		});
		GridBagConstraints gbc_outButton = new GridBagConstraints();
		gbc_outButton.insets = new Insets(0, 0, 5, 0);
		gbc_outButton.gridx = 6;
		gbc_outButton.gridy = 2;
		topPanel.add(outButton, gbc_outButton);

		rightPanel.setBackground(new java.awt.Color(50, 50, 50));
		rightPanel.setLayout(new BorderLayout(0, 0));
		rightPanel.add(new JPanelExplorar(thisFrame));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(framePanel,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(framePanel,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		if (ControladorMyVideoApp.getUnicaInstancia().isBirthday()) {
			System.out.println("FELIZ CUMPLEA�OS");		
			BirthdayFrame ventanaFelicitacion = new BirthdayFrame();
			ventanaFelicitacion.getFrame().setVisible(true);
			ventanaFelicitacion.getFrame().setAlwaysOnTop(true);
		}
		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void createTableListas() {
		table_1.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				// VistaVideo vistaVideo = new VistaVideo();
				int column = table_1.getColumnModel().getColumnIndexAtX(e.getX());
				int row = e.getY() / table_1.getRowHeight();

				if (row < table_1.getRowCount() && row >= 0 && column < table_1.getColumnCount() && column >= 0) {
					Object value = table_1.getValueAt(row, column);
					if (value instanceof JLabel) {
						System.out.println("click lista");
						JLabel label = (JLabel) value;
						rightPanel.removeAll();
						ControladorMyVideoApp.getUnicaInstancia().stopVideo();

						stopTimer();
						rightPanel.add(new JPanelMiListaVideos(label.getText(), thisFrame));

						rightPanel.revalidate();
						rightPanel.repaint();
					}
				}
			}

		});
		Object[] data = ControladorMyVideoApp.getUnicaInstancia().getListasUsuario();
		Object[][] model_data = new Object[data.length][1];
		for (int i = 0; i < data.length; i++) {
			ListaVideos lv = (ListaVideos) data[i];
			JLabel etiq = new JLabel(lv.getNombreLista());
			etiq.setForeground(Color.WHITE);
			etiq.setFont(new Font("Arial", Font.BOLD, 16));
			etiq.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
			model_data[i][0] = etiq;
		}

		DefaultTableModel model = new DefaultTableModel(model_data, new Object[] { null }) {
			private static final long serialVersionUID = 1L;

			public boolean isCellEditable(int row, int column) {
				return false;
			}
		};
		table_1.setModel(model);
		table_1.setBackground(null);
		table_1.setRowHeight(30);
		table_1.setShowGrid(false);
		table_1.setRowSelectionAllowed(false);
		table_1.setTableHeader(null);

		myListsScrollPanel.setViewportView(table_1);
		myListsScrollPanel.getViewport().setBackground(null);

	}

	public void volverAExplorar() {
		rightPanel.removeAll();
		rightPanel.add(new JPanelExplorar(thisFrame));
		revalidate();
		repaint();
	}

	public void borrarLista(String tituloLista) {
		ControladorMyVideoApp.getUnicaInstancia().borrarListaVideos(tituloLista);
		rightPanel.removeAll();
		rightPanel.add(new JPanelExplorar(thisFrame), BorderLayout.CENTER);

		createTableListas();

		revalidate();
		repaint();
	}

	public void addEtiq(String url) {
		String etiq = JOptionPane.showInputDialog(thisFrame, "Ponga un nuevo nombre de etiqueta");
		Pattern pattern = Pattern.compile("\\s");
		Matcher matcher = pattern.matcher(etiq);
		if (etiq != null && !etiq.isEmpty() && !matcher.find()) {
			if (!ControladorMyVideoApp.getUnicaInstancia().registrarEtiq(url, etiq))
				JOptionPane.showMessageDialog(thisFrame, "Este video ya tiene esa etiqueta", "Error",
						JOptionPane.ERROR_MESSAGE);
		} else {
			if(etiq != null && !etiq.isEmpty())
				JOptionPane.showMessageDialog(thisFrame, "Etiqueta no valida", "Error",
					JOptionPane.ERROR_MESSAGE);
		}

	}

	public void buscaVideos(String text) {
		ControladorMyVideoApp.getUnicaInstancia().buscaVideos(text);
	}

	public void cambiaFiltro(ITest<Video> filtro) {
		ControladorMyVideoApp.getUnicaInstancia().cambiaFiltro(filtro);
	}

	public String getFiltroAcual() {
		return ControladorMyVideoApp.getUnicaInstancia().getFiltroActual();
	}

	public void setTimer(int tiempo, ActionListener actionListener) {
		timer = new Timer(tiempo * 1000, actionListener);
		timer.setRepeats(false);
		timer.start();
	}
	public void stopTimer() {
		if(timer == null)
			return;
		timer.stop();
	}
	
	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		System.out.println("Entra en AppFrame");
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new AppFrame().setVisible(true);
			}
		});
	}

	private AppFrame thisFrame = this;

	private javax.swing.JButton deployableUserPanel;
	private javax.swing.JPanel framePanel;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JSeparator jSeparator2;
	private javax.swing.JSeparator jSeparator3;
	private javax.swing.JSeparator jSeparator4;
	private javax.swing.JPanel leftPanel;
	private javax.swing.JLabel mostSeenLabel;
	private javax.swing.JLabel myListsLabel;
	private javax.swing.JPanel myListsPanel;
	private javax.swing.JScrollPane myListsScrollPanel;
	private javax.swing.JLabel newListLabel;
	private javax.swing.JLabel recentLabel;
	private javax.swing.JPanel rightPanel;
	private javax.swing.JPanel topPanel;
	private javax.swing.JLabel userIconLabel;
	private javax.swing.JLabel usernameLabel;
	private JButton addButton;
	private JTable table_1;
	private JButton historyButton;
	private JButton topButton;
	private JLabel lblNewLabel;
	private JButton btnNewButton;
	private JButton button_1;
	private JButton outButton;
	private Timer timer;
}
